name: deploy-api

on:
  push:
    branches:
      - staging
      - master

jobs:
  deployment:
  environment: staging
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Build API Docker image
      run: |
        docker build -t api-image ./backend

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Start MongoDB container
      run: docker run -d --name api-image ./backend

    - name: Run API tests
      run: |
        # Run tests using npm test
        docker run --rm --link mongodb:db api-image npm test
  
  push:
    runs-on: ubuntu-latest

    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Docker login to Docker Hub
    - name: Docker Login
      run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    # Tag Docker images 
    - name: Tag and push API Docker image
      run: |
        docker tag api-image ${{ secrets.DOCKER_HUB_USERNAME }}/api-image:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/api-image:latest
    
    # Install kubectl
    - name: Setup kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'
     # Set up kubectl with staging cluster configuration
    - name: Configure Staging cluster
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

    # Apply Kubernetes manifest for frontend deployment to staging
    - name: Deploy Api
      run: kubectl apply -f ./api/api-deployment.yaml